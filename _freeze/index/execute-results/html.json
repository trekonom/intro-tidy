{
  "hash": "ce0a92f7bd46d1028b0205152bdfa4b8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Intro-tidy\"\nformat: revealjs\nengine: knitr\nexecute: \n  freeze: auto\n---\n\n\n\n\n\n# tidyverse {background-color=\"aquamarine\"}\n\n> The [tidyverse](https://www.tidyverse.org) is an opinionated collection of R packages designed for data science. All packages share an underlying design philosophy, grammar, and data structures.\n\n## Why should we care about the tidyverse?\n\n> What's the mean of `mpg` (miles per gallon) and the number of observations by `cyl` (cylinders) in the `mtcars` dataset?\n\n::: columns\n\n::: {.column width=\"50%\"}\n#### tidyverse\n```{webr-r}\nmtcars |> \n  group_by(cyl) |> \n  summarise(mean = mean(mpg), n = n())\n```\n:::\n\n::: {.column width=\"50%\"}\n\n#### base R\n\n```{webr-r}\nmtcars_by <- by(mtcars, mtcars$cyl, function(df) {\n  with(df, data.frame(\n    cyl = cyl[[1]],\n    mean = mean(mpg),\n    n = nrow(df)\n  ))\n})\ndo.call(rbind, mtcars_by)\n```\n:::\n\n:::\n\n::: aside\nAdapted from [dplyr base R](https://dplyr.tidyverse.org/articles/base.html#summarise-reduce-multiple-values-down-to-a-single-value)\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}